
@model List<Tiennthe171977_Oceanteach.Models.Employee>
@{
    ViewBag.Title = "List Employees";
}
<h2 class="text-center text-primary my-4">Danh sách Employee</h2>
<div class="container">
    <!-- Search and Export Bar -->
    <div class="row mb-3">
        <div class="col-md-6">
            <div class="input-group">
                <input type="text" id="searchInput" class="form-control" placeholder="Tìm kiếm..." value="@ViewBag.SearchTerm">
                <button class="btn btn-outline-primary" type="button" id="searchButton">
                    <i class="bi bi-search"></i> Tìm kiếm
                </button>
            </div>
        </div>
        <div class="col-md-6 text-end">
            <button class="btn btn-success" id="exportSelected" disabled>
                <i class="bi bi-file-earmark-excel"></i> Export đã chọn
            </button>
            <button class="btn btn-info" id="exportAll">
                <i class="bi bi-file-earmark-excel"></i> Export tất cả
            </button>
        </div>
    </div>

    <table class="table table-striped table-hover shadow-sm rounded">
        <thead class="table-dark">
            <tr>
                <th>
                    <input type="checkbox" id="selectAll" class="form-check-input">
                </th>
                <th>ID</th>
                <th>Họ Tên</th>
                <th>Số Điện Thoại</th>
                <th class="text-center">Hành động</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                foreach (var emp in Model)
                {
                    <tr>
                        <td>
                            <input type="checkbox" class="form-check-input employee-checkbox" value="@emp.EmployeeId">
                        </td>
                        <td>@emp.EmployeeId</td>
                        <td>@emp.HoTen</td>
                        <td>@emp.SoDienThoai</td>
                        <td class="text-center">
                            
                            <a class="btn btn-info btn-sm" href="@Url.Action("Detail","Employee", new { id = emp.EmployeeId })">
                                <i class="bi bi-eye"></i> Xem
                            </a>
                            
                            <a class="btn btn-warning btn-sm" href="@Url.Action("Edit","Employee", new { id = emp.EmployeeId })">
                                <i class="bi bi-pencil"></i> Sửa
                            </a>
                            
                            <button class="btn btn-danger btn-sm" onclick="confirmDelete(@emp.EmployeeId)">
                                <i class="bi bi-trash"></i> Xóa
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="5" class="text-center text-muted">Không có dữ liệu.</td>
                </tr>
            }
        </tbody>
    </table>
    
    <nav>
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, searchTerm = ViewBag.SearchTerm })">@i</a>
                </li>
            }
        </ul>
    </nav>
</div>


<script>
    function confirmDelete(empId) {
        if (confirm("Bạn có chắc chắn muốn xóa nhân viên này không?")) {
            window.location.href = '@Url.Action("Delete", "Employee")' + '?id=' + empId;
        }
    }

    
    document.addEventListener('DOMContentLoaded', function() {
        const selectAllCheckbox = document.getElementById('selectAll');
        const employeeCheckboxes = document.querySelectorAll('.employee-checkbox');
        const exportSelectedBtn = document.getElementById('exportSelected');
        const exportAllBtn = document.getElementById('exportAll');
        const searchBtn = document.getElementById('searchButton');
        const searchInput = document.getElementById('searchInput');

        
        selectAllCheckbox.addEventListener('change', function() {
            const isChecked = this.checked;
            employeeCheckboxes.forEach(checkbox => {
                checkbox.checked = isChecked;
            });
            updateExportButtonState();
        });

        
        employeeCheckboxes.forEach(checkbox => {
            checkbox.addEventListener('change', updateExportButtonState);
        });

        
        function updateExportButtonState() {
            const checkedBoxes = document.querySelectorAll('.employee-checkbox:checked');
            exportSelectedBtn.disabled = checkedBoxes.length === 0;
        }

        
        exportSelectedBtn.addEventListener('click', function() {
            const selectedIds = Array.from(document.querySelectorAll('.employee-checkbox:checked'))
                .map(checkbox => checkbox.value);

            if (selectedIds.length > 0) {
                exportEmployees(selectedIds);
            }
        });

        
        exportAllBtn.addEventListener('click', function() {
        try {
            const searchTerm = document.getElementById('searchInput').value || '';
            console.log("Exporting all with search term:", searchTerm);

            const url = '@Url.Action("ExportEmployees", "Employee")' +
                '?type=search&searchTerm=' + encodeURIComponent(searchTerm);

            console.log("Export URL:", url);
            window.location.href = url;
        } catch (error) {
            console.error('Error triggering export:', error);
            alert('Có lỗi xảy ra khi chuẩn bị xuất dữ liệu!');
        }
        });

        
        searchBtn.addEventListener('click', function() {
            const searchTerm = searchInput.value;
            window.location.href = '@Url.Action("Index", "Employee")' + '?searchTerm=' + encodeURIComponent(searchTerm);
        });

        
        searchInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                searchBtn.click();
            }
        });

        
        function exportEmployees(ids, searchTerm) {
            let url = '@Url.Action("ExportEmployees", "Employee")';
            const params = [];

            if (ids) {
                url += '?type=selected';
                const formData = new FormData();
                ids.forEach(id => formData.append('selectedIds', id));

                fetch(url, {
                    method: 'POST',
                    body: formData
                })
                .then(response => {
                    if (response.ok) return response.blob();
                    throw new Error('Network response was not ok');
                })
                .then(blob => {
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = 'SelectedEmployees.xlsx';
                    document.body.appendChild(a);
                    a.click();
                    window.URL.revokeObjectURL(url);
                })
                .catch(error => {
                    console.error('Error exporting employees:', error);
                    alert('Có lỗi xảy ra khi xuất dữ liệu!');
                });
            } else {
                
                window.location.href = '@Url.Action("ExportEmployees", "Employee")' +
                    '?type=search&searchTerm=' + encodeURIComponent(searchTerm || '');
            }
        }
    });
</script>

<!-- CSS -->
<style>
    table {
        border-radius: 10px;
        overflow: hidden;
    }

    .table-hover tbody tr:hover {
        background-color: #f8f9fa;
    }

    .pagination .page-item.active .page-link {
        background-color: #007bff;
        border-color: #007bff;
    }

    .pagination .page-link {
        color: #007bff;
    }

    .btn {
        margin: 2px;
    }

    #exportSelected, #exportAll {
        transition: opacity 0.3s;
    }

        #exportSelected:disabled {
            opacity: 0.6;
        }
</style>
